import 'package:dio/dio.dart';
import 'package:get_it/get_it.dart';
import 'package:oycrm/bloc/ApplicationBloc.dart';
import 'package:oycrm/bloc/BoardScreen/BoardsBloc.dart';
import 'package:oycrm/bloc/BoardScreen/CardsBloc.dart';
import 'package:oycrm/bloc/BoardScreen/ColumnsBloc.dart';
import 'package:oycrm/bloc/BoardScreen/OpenedCardBloc.dart';
import 'package:oycrm/bloc/BoardScreen/OpenedCardScreen/AddContactBloc.dart';
import 'package:oycrm/bloc/BoardScreen/OpenedCardScreen/AttachmentsBloc.dart';
import 'package:oycrm/bloc/BoardScreen/OpenedCardScreen/EventsBloc.dart';
import 'package:oycrm/bloc/CommentBloc.dart';
import 'package:oycrm/bloc/LoginScreen/LoginCredentialsBloc.dart';
import 'package:oycrm/bloc/LoginScreen/LoginErrorBloc.dart';
import 'package:oycrm/bloc/LoginScreen/LoginModeBloc.dart';
import 'package:oycrm/bloc/NotificationsBloc.dart';
import 'package:oycrm/bloc/TasksBloc.dart';
import 'package:oycrm/bloc/UserBloc.dart';
import 'package:oycrm/bloc/UsersBloc.dart';
import 'package:oycrm/repositories/AttachmentRepository.dart';
import 'package:oycrm/repositories/BoardRepository.dart';
import 'package:oycrm/repositories/CardRepository.dart';
import 'package:oycrm/repositories/ColumnRepository.dart';
import 'package:oycrm/repositories/EventRepository.dart';
import 'package:oycrm/repositories/NotificationRepository.dart';
import 'package:oycrm/repositories/TaskRepository.dart';
import 'package:oycrm/repositories/UserRepository.dart';
import 'package:oycrm/utils/PushNotifications.dart';
import 'package:oycrm/utils/SocketConnection.dart';
import 'package:oycrm/utils/http.dart';
import 'package:oycrm/widgets/BoardScreen/OpenedCardScreen.dart';

import '../config.dart';

final sl = GetIt.instance;
Future<void> setupServiceLocator() async {
  sl.registerSingleton(PushNotification());
  sl.registerSingleton(LoginCredentialsBloc());
  sl.registerSingleton(LoginErrorBloc());
  sl.registerSingleton(LoginModeBloc());
  sl.registerSingleton(UserBloc());
  sl.registerSingleton(UsersBloc());
  sl.registerSingleton(UserRepository());
  sl.registerSingleton(ApplicationBloc());
  sl.registerSingleton(BoardsBloc());
  sl.registerSingleton(BoardRepository());
  sl.registerSingleton(ColumnsBloc());
  sl.registerSingleton(ColumnRepository());
  sl.registerSingleton(CardsBloc());
  sl.registerSingleton(CardRepository());
  sl.registerSingleton(OpenedCardScreen());
  sl.registerSingleton(OpenedCardBloc());
  sl.registerSingleton(AttachmentsBloc());
  sl.registerSingleton(AttachmentRepository());
  sl.registerSingleton(Http(new BaseOptions(baseUrl: Config.baseUrl)));
  sl.registerSingleton(SocketConnection());
  sl.registerSingleton(AddContactBloc());
  sl.registerSingleton(EventsBloc());
  sl.registerSingleton(EventRepository());
  sl.registerSingleton(CommentBloc());
  sl.registerSingleton(NotificationsBloc());
  sl.registerSingleton(NotificationRepository());
  sl.registerSingleton(TasksBloc());
  sl.registerSingleton(TaskRepository());
}
